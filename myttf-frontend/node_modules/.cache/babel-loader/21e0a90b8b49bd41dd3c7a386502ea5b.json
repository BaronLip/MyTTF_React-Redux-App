{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/MatchesForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createMatch } from \"../actions/MatchActions\";\nimport { Button, Header, Form, Input, Radio, TextArea } from 'semantic-ui-react';\n\nclass MatchesForm extends Component {\n  constructor() {\n    super();\n\n    this.handleOnChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChecked = (e, {\n      value\n    }) => {\n      this.setState({\n        match_type: value\n      });\n    };\n\n    this.handleOnChangeForGames = event => {\n      const _event$target2 = event.target,\n            name = _event$target2.name,\n            value = _event$target2.value;\n      debugger;\n      value = parseInt(value, 10);\n      this.setState(_objectSpread({}, this.state, {\n        games: _objectSpread({}, this.state.games, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"Submitting from MatchesForm.\", this.props.player);\n      event.preventDefault(); // debugger\n\n      this.props.createMatch(_objectSpread({}, this.state, {\n        bookmarked: false\n      }), this.props.player); // // Reset the form below.\n\n      this.setState({\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: null,\n        games: [// added games here\n        ]\n      });\n    };\n\n    this.gameForm = () => {\n      // const gameForm = null;\n      if (this.state.match_type === \"5\") {\n        return;\n        React.createElement(React.Fragment, null, React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Game 1:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Game 2:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Game 3:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Game 4:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Game 5:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }))));\n      } else if (this.state.match_type === \"7\") {\n        return;\n        React.createElement(React.Fragment, null, React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"Game 1:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Game 2:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Game 3:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Game 4:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Game 5:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Game 6:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          widths: \"equal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Game 7:\"), React.createElement(Input, {\n          placeholder: \"your score\",\n          name: \"player_score\" // value={this.state.match}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, \" : \"), React.createElement(Input, {\n          name: \"opponent_score\",\n          placeholder: \"opponent score\" // value={this.state.opponent_name}\n          ,\n          onChange: this.handleOnChangeForGames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }))));\n      }\n    };\n\n    this.state = {\n      opponent_name: \"\",\n      match_type: \"\",\n      notes: \"\",\n      bookmarked: null,\n      games: []\n    };\n  }\n\n  render() {\n    console.log(\"MatchesForm.js\", this.state, this.props);\n    return React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      textAlign: \"center\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Create a Match\"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Date\",\n      placeholder: \"Date:\",\n      type: \"date\",\n      name: \"date\" // Date input does not need to be controlled for value to pass into state. Uncommenting below causes an error.\n      // value={new Date().toISOString().slice(0, 10)}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"opponent_name\",\n      control: Input,\n      label: \"Opponent Name:\",\n      placeholder: \"Opponent Name\",\n      value: this.state.opponent_name,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Match Type:\"), React.createElement(Form.Field, {\n      \"data-index\": \"1\",\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 7\",\n      value: \"7\",\n      checked: this.state.match_type === \"7\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      \"data-index\": \"1\",\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 5\",\n      value: \"5\",\n      checked: this.state.match_type === \"5\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, \"Game 7:\"), React.createElement(Input, {\n      placeholder: \"your score\",\n      name: \"player_score\" // value={this.state.match}\n      ,\n      onChange: this.handleOnChangeForGames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \" : \"), React.createElement(Input, {\n      name: \"opponent_score\",\n      placeholder: \"opponent score\" // value={this.state.opponent_name}\n      ,\n      onChange: this.handleOnChangeForGames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      style: {\n        minHeight: 30\n      },\n      name: \"notes\",\n      control: TextArea,\n      label: \"Notes:\",\n      placeholder: \"Notes\",\n      value: this.state.notes,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n} //Is ES6 syntax able to take multiple arguments?\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createMatch: (formData, player) => dispatch(createMatch(formData, player))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MatchesForm);","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/MatchesForm.js"],"names":["React","Component","connect","createMatch","Button","Header","Form","Input","Radio","TextArea","MatchesForm","constructor","handleOnChange","event","target","name","value","setState","handleChecked","e","match_type","handleOnChangeForGames","parseInt","state","games","handleSubmit","console","log","props","player","preventDefault","bookmarked","date","opponent_name","notes","gameForm","render","minHeight","mapDispatchToProps","dispatch","formData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createMatch } from \"../actions/MatchActions\";\n\nimport {\n    Button,\n    Header,\n    Form,\n    Input,\n    Radio,\n    TextArea,\n} from 'semantic-ui-react'\n\n\nclass MatchesForm extends Component {\n    constructor () {\n        super();\n        this.state = {\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: null,\n            games: []\n        }   \n    }\n\n    handleOnChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    \n    handleChecked = (e, { value }) => {\n        this.setState({ match_type: value })\n    }\n\n    handleOnChangeForGames = event => {\n        const { name, value } = event.target;\n        debugger\n        value = parseInt(value, 10);\n        this.setState( {...this.state, games: { ...this.state.games, [name]: value } } );\n    }\n    \n\n    handleSubmit = event => {\n        console.log(\"Submitting from MatchesForm.\", this.props.player);\n        event.preventDefault();\n        // debugger\n        this.props.createMatch({...this.state, bookmarked: false }, this.props.player);\n        // // Reset the form below.\n        this.setState({\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: null,\n            games: [\n                // added games here\n            ]\n        });\n    }\n\n    \n    \n    \n    gameForm = () => {\n        // const gameForm = null;\n        if (this.state.match_type === \"5\") {\n            return \n            <>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 1:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 2:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 3:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 4:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 5:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n            </>\n        } else if (this.state.match_type === \"7\") {\n            return\n            <>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 1:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 2:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 3:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 4:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 5:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 6:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 7:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n            </>\n        }\n    }\n\n    render() {\n        console.log(\"MatchesForm.js\", this.state, this.props)\n        \n\n        \n        return (\n            <Form onSubmit={ event => this.handleSubmit(event) }>\n                <Header as='h3' block textAlign='center' color='blue'>\n                    Create a Match\n                </Header>\n                <Form.Group widths='equal'>\n                    <Form.Input \n                        fluid label='Date' \n                        placeholder='Date:' \n                        type=\"date\" \n                        name=\"date\"\n                        // Date input does not need to be controlled for value to pass into state. Uncommenting below causes an error.\n                        // value={new Date().toISOString().slice(0, 10)}\n                        onChange={this.handleOnChange}/>\n\n                    <Form.Field\n                        name=\"opponent_name\"\n                        control={Input}\n                        label='Opponent Name:'\n                        placeholder='Opponent Name'\n                        value={this.state.opponent_name}\n                        onChange={this.handleOnChange}\n                    />\n                </Form.Group>\n\n                <Form.Group inline>\n                    <label>Match Type:</label>\n                    <Form.Field\n                        data-index=\"1\"\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 7'\n                        value='7'\n                        checked={this.state.match_type === \"7\"}\n                        onChange={this.handleChecked}\n                    />\n                    <Form.Field\n                        data-index=\"1\"\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 5'\n                        value='5'\n                        checked={this.state.match_type === \"5\"}\n                        onChange={this.handleChecked}\n                    />\n                </Form.Group>\n                \n                {/* {gameform} */}\n                {/* <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 1:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 2:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 3:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 4:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 5:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 6:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group> */}\n                <Form.Group widths='equal'>\n                    <Form.Field inline>\n                        <label>Game 7:</label>\n                        <Input\n                            placeholder='your score'\n                            name=\"player_score\"\n                            // value={this.state.match}\n                            onChange={this.handleOnChangeForGames} \n                        />\n                        <label> : </label>\n                        <Input\n                            name=\"opponent_score\"\n                            placeholder='opponent score'\n                            // value={this.state.opponent_name}\n                            onChange={this.handleOnChangeForGames}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                \n\n                <Form.Field style={{ minHeight: 30 }}\n                    name=\"notes\"\n                    control={TextArea}\n                    label='Notes:'\n                    placeholder='Notes'\n                    value={this.state.notes}\n                    onChange={this.handleOnChange}\n                />\n                <Form.Field \n                    control={Button}>\n                    Submit\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\n//Is ES6 syntax able to take multiple arguments?\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createMatch: (formData, player) => dispatch(createMatch(formData, player))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(MatchesForm);"]},"metadata":{},"sourceType":"module"}