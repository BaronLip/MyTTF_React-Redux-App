{"ast":null,"code":"export const createGame = game => {\n  console.log(\"GameActions createGame\", game);\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/players/${player.id}/matches`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(match)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(`${response.statusText}`);\n      }\n    }) // ...reflect the added match to the window...\n    .then(match => {\n      dispatch(addMatch(match));\n    }) // ...or show an error.\n    .catch(error => alert(error));\n  };\n};","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/actions/GameActions.js"],"names":["createGame","game","console","log","dispatch","fetch","player","id","method","headers","body","JSON","stringify","match","then","response","ok","json","Error","statusText","addMatch","catch","error","alert"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,IAAtC;AACA,SAAOG,QAAD,IAAc;AAChBC,IAAAA,KAAK,CAAE,wCAAuCC,MAAM,CAACC,EAAG,UAAnD,EAA8D;AAC/DC,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFsD;AAK/DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,KAAf;AALyD,KAA9D,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,OAFD,MAGK;AACD,cAAM,IAAIC,KAAJ,CAAW,GAAEH,QAAQ,CAACI,UAAW,EAAjC,CAAN;AACH;AACA,KAdD,EAeI;AAfJ,KAgBKL,IAhBL,CAgBUD,KAAK,IAAI;AAAET,MAAAA,QAAQ,CAACgB,QAAQ,CAACP,KAAD,CAAT,CAAR;AAA2B,KAhBhD,EAiBI;AAjBJ,KAkBKQ,KAlBL,CAkBWC,KAAK,IAAIC,KAAK,CAACD,KAAD,CAlBzB;AAmBH,GApBD;AAqBH,CAvBM","sourcesContent":["export const createGame = (game) => {\n    console.log(\"GameActions createGame\", game);\n    return(dispatch) => {\n        fetch(`http://localhost:3000/api/v1/players/${player.id}/matches`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(match)\n        })\n        .then(response => {\n        if (response.ok) {\n            return response.json()\n        }\n        else {\n            throw new Error(`${response.statusText}`)\n        }\n        })\n            // ...reflect the added match to the window...\n            .then(match => { dispatch(addMatch(match)) })\n            // ...or show an error.\n            .catch(error => alert(error));\n    }\n}"]},"metadata":{},"sourceType":"module"}