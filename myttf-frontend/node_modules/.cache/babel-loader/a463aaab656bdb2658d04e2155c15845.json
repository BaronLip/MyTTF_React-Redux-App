{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/MatchesForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createMatch } from \"../actions/MatchActions\";\nimport { Button, Header, Form, Input, Radio, TextArea, Grid, Segment, Label } from 'semantic-ui-react';\n\nclass MatchesForm extends Component {\n  constructor() {\n    super();\n\n    this.handleOnChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleChecked = (e, {\n      value\n    }) => {\n      debugger;\n      this.setState({\n        match_type: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"Submitting from MatchesForm.\", this.props.player);\n      event.preventDefault(); // debugger\n\n      this.props.createMatch(_objectSpread({}, this.state, {\n        bookmarked: false\n      }), this.props.player); // // Reset the form below.\n\n      this.setState({\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: false\n      });\n    };\n\n    this.state = {\n      opponent_name: \"\",\n      match_type: \"\",\n      notes: \"\",\n      bookmarked: false\n    };\n  }\n\n  render() {\n    console.log(\"MatchesForm.js\", this.state, this.props); // From Semantic UI but not needed.\n    // const { value } = this.state\n\n    return React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      textAlign: \"center\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Create a Match\"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Date\",\n      placeholder: \"Date:\",\n      type: \"date\",\n      name: \"date\" // Date input does not need to be controlled for value to pass into state. Uncommenting below causes an error.\n      // value={new Date().toISOString().slice(0, 10)}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"opponent_name\",\n      control: Input,\n      label: \"Opponent Name:\",\n      placeholder: \"Opponent Name\",\n      value: this.state.opponent_name,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Match Type:\"), React.createElement(Form.Field, {\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 7\",\n      value: \"7\",\n      checked: this.state.match_type === \"7\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 5\",\n      value: \"5\",\n      checked: this.state.match_type === \"5\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Game 1\",\n      placeholder: \"your score\",\n      name: \"game_one_player_score\" // Date input does not need to be controlled for value to pass into state. Uncommenting below causes an error.\n      // value={this.state.match}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"game_one_opponent_score\",\n      control: Input,\n      label: \" \",\n      placeholder: \"opponent score\" // value={this.state.opponent_name}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      style: {\n        minHeight: 30\n      },\n      name: \"notes\",\n      control: TextArea,\n      label: \"Notes:\",\n      placeholder: \"Notes\",\n      value: this.state.notes,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n} //Is ES6 syntax able to take multiple arguments?\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createMatch: (formData, player) => dispatch(createMatch(formData, player))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MatchesForm);","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/MatchesForm.js"],"names":["React","Component","connect","createMatch","Button","Header","Form","Input","Radio","TextArea","Grid","Segment","Label","MatchesForm","constructor","handleOnChange","event","target","name","value","setState","console","log","state","handleChecked","e","match_type","handleSubmit","props","player","preventDefault","bookmarked","date","opponent_name","notes","render","minHeight","mapDispatchToProps","dispatch","formData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createMatch } from \"../actions/MatchActions\";\n\nimport {\n    Button,\n    Header,\n    Form,\n    Input,\n    Radio,\n    TextArea,\n    Grid,\n    Segment,\n    Label\n} from 'semantic-ui-react'\n\nclass MatchesForm extends Component {\n    constructor () {\n        super();\n        this.state = {\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: false,\n        }   \n    }\n\n    handleOnChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }\n    \n    handleChecked = (e, { value }) => {\n        debugger\n        this.setState({ match_type: value })\n    }\n\n    handleSubmit = event => {\n        console.log(\"Submitting from MatchesForm.\", this.props.player);\n        event.preventDefault();\n        // debugger\n        this.props.createMatch({...this.state, bookmarked: false }, this.props.player);\n        // // Reset the form below.\n        this.setState({\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: false,\n        });\n    }\n\n    render() {\n        console.log(\"MatchesForm.js\", this.state, this.props)\n        \n        // From Semantic UI but not needed.\n        // const { value } = this.state\n        return (\n            <Form onSubmit={ event => this.handleSubmit(event) }>\n                <Header as='h3' block textAlign='center' color='blue'>\n                    Create a Match\n                </Header>\n                <Form.Group widths='equal'>\n                    <Form.Input \n                        fluid label='Date' \n                        placeholder='Date:' \n                        type=\"date\" \n                        name=\"date\"\n                        // Date input does not need to be controlled for value to pass into state. Uncommenting below causes an error.\n                        // value={new Date().toISOString().slice(0, 10)}\n                        onChange={this.handleOnChange}/>\n\n                    <Form.Field\n                        name=\"opponent_name\"\n                        control={Input}\n                        label='Opponent Name:'\n                        placeholder='Opponent Name'\n                        value={this.state.opponent_name}\n                        onChange={this.handleOnChange}\n                    />\n                </Form.Group>\n\n                <Form.Group inline>\n                    <label>Match Type:</label>\n                    <Form.Field\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 7'\n                        value='7'\n                        checked={this.state.match_type === \"7\"}\n                        onChange={this.handleChecked}\n                    />\n                    <Form.Field\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 5'\n                        value='5'\n                        checked={this.state.match_type === \"5\"}\n                        onChange={this.handleChecked}\n                    />\n                </Form.Group>\n\n                <Form.Group widths='equal'>\n                    <Form.Input\n                        fluid label='Game 1'\n                        placeholder='your score'\n                        name=\"game_one_player_score\"\n                        // Date input does not need to be controlled for value to pass into state. Uncommenting below causes an error.\n                        // value={this.state.match}\n                        onChange={this.handleOnChange} />\n\n                    <Form.Input\n                        name=\"game_one_opponent_score\"\n                        control={Input}\n                        label=' '\n                        placeholder='opponent score'\n                        // value={this.state.opponent_name}\n                        onChange={this.handleOnChange}\n                    />\n                </Form.Group>\n\n                <Form.Field style={{ minHeight: 30 }}\n                    name=\"notes\"\n                    control={TextArea}\n                    label='Notes:'\n                    placeholder='Notes'\n                    value={this.state.notes}\n                    onChange={this.handleOnChange}\n                />\n                <Form.Field \n                    control={Button}>\n                    Submit\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\n//Is ES6 syntax able to take multiple arguments?\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createMatch: (formData, player) => dispatch(createMatch(formData, player))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(MatchesForm);"]},"metadata":{},"sourceType":"module"}