{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/SignupForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Button, Header, Form, Input, Radio, TextArea } from 'semantic-ui-react';\nexport default class EditMatchForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: \"\",\n      opponent_name: \"\",\n      match_type: \"\",\n      notes: \"\",\n      bookmarked: null\n    };\n\n    this.handleOnChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleChecked = (e, {\n      value\n    }) => this.setState({\n      match_type: value\n    });\n\n    this.handleSubmit = event => {\n      console.log(\"Patching from MatchesForm.\");\n      event.preventDefault();\n      this.props.patchMatch(this.state); // Reset the form below.\n\n      this.setState({\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: false\n      });\n    };\n  }\n\n  // Then componentDidMount will overwrite the state upon second render.\n  componentDidMount() {\n    fetch(`http://localhost:3000/api/v1/matches/${this.props.match.params.id}`).then(response => response.json()).then(matchData => this.setState(_objectSpread({}, matchData))).catch(error => console.log(error));\n  }\n\n  render() {\n    console.log(\"EditMatchForm.js\", this.state, this.props);\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      textAlign: \"center\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"Enter E-mail\",\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Enter Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      content: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/SignupForm.js"],"names":["React","Component","connect","Button","Header","Form","Input","Radio","TextArea","EditMatchForm","state","date","opponent_name","match_type","notes","bookmarked","handleOnChange","event","target","name","value","setState","console","log","handleChecked","e","handleSubmit","preventDefault","props","patchMatch","componentDidMount","fetch","match","params","id","then","response","json","matchData","catch","error","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,QANJ,QAOO,mBAPP;AASA,eAAe,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEjDS,KAFiD,GAEzC;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,UAAU,EAAE,EAHR;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,UAAU,EAAE;AALR,KAFyC;;AAAA,SAoBjDC,cApBiD,GAoBhCC,KAAK,IAAI;AAAA,4BACEA,KAAK,CAACC,MADR;AAAA,YACdC,IADc,iBACdA,IADc;AAAA,YACRC,KADQ,iBACRA,KADQ;AAEtB,WAAKC,QAAL,CAAc;AACV,SAACF,IAAD,GAAQC;AADE,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACH,KA1BgD;;AAAA,SA4BjDc,aA5BiD,GA4BjC,CAACC,CAAD,EAAI;AAAEL,MAAAA;AAAF,KAAJ,KAAkB,KAAKC,QAAL,CAAc;AAAER,MAAAA,UAAU,EAAEO;AAAd,KAAd,CA5Be;;AAAA,SA8BjDM,YA9BiD,GA8BjCT,KAAD,IAAW;AACtBK,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAN,MAAAA,KAAK,CAACU,cAAN;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKnB,KAA3B,EAHsB,CAItB;;AACA,WAAKW,QAAL,CAAc;AACVV,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,aAAa,EAAE,EAFL;AAGVC,QAAAA,UAAU,EAAE,EAHF;AAIVC,QAAAA,KAAK,EAAE,EAJG;AAKVC,QAAAA,UAAU,EAAE;AALF,OAAd;AAOH,KA1CgD;AAAA;;AAUjD;AACAe,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAE,wCAAuC,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAApE,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,SAAS,IAAI,KAAKjB,QAAL,mBACViB,SADU,EAFvB,EAKKC,KALL,CAKWC,KAAK,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,KAAZ,CALpB;AAMH;;AA0BDC,EAAAA,MAAM,GAAG;AACLnB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKb,KAArC,EAA4C,KAAKkB,KAAjD;AAEA,WACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,KAAK,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,gBAAlB;AAAmC,MAAA,IAAI,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAJJ,CADJ;AAYH;;AA3DgD","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport {\n    Button,\n    Header,\n    Form,\n    Input,\n    Radio,\n    TextArea,\n} from 'semantic-ui-react'\n\nexport default class EditMatchForm extends Component {\n    // Setting an initial state allows the first render to complete.\n    state = {\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: null\n    }\n\n    // Then componentDidMount will overwrite the state upon second render.\n    componentDidMount() {\n        fetch(`http://localhost:3000/api/v1/matches/${this.props.match.params.id}`)\n            .then(response => response.json())\n            .then(matchData => this.setState(\n                { ...matchData }\n            ))\n            .catch(error => console.log(error))\n    }\n\n    handleOnChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }\n\n    handleChecked = (e, { value }) => this.setState({ match_type: value })\n\n    handleSubmit = (event) => {\n        console.log(\"Patching from MatchesForm.\")\n        event.preventDefault();\n        this.props.patchMatch(this.state);\n        // Reset the form below.\n        this.setState({\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: false,\n        });\n    }\n\n    render() {\n        console.log(\"EditMatchForm.js\", this.state, this.props)\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Header as='h3' block textAlign='center' color='blue'>\n                    Sign Up\n                </Header>\n                <Form.Group widths='equal'>\n                    <Form.Input label='Enter E-mail' type='email' />\n                    <Form.Input label='Enter Password' type='password' />\n                    <Form.Button content='Submit' />\n                </Form.Group>\n            </Form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}