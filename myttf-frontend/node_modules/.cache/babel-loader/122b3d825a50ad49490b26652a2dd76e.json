{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/EditMatchForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Header, Form, Input, Radio, TextArea, Grid, Menu } from 'semantic-ui-react';\n\nclass EditMatchForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      match: {\n        id: \"\",\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: null,\n        player_id: null,\n        games: []\n      }\n    };\n\n    this.handleOnChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value; // const name = event.target.name;\n      // const value = event.target.value;\n      // This sets State for match since it is nested within State.\n\n      this.setState(state => _objectSpread({}, state, {\n        match: _objectSpread({}, state.match, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleChecked = e => {\n      let value = e.target.parentElement.firstChild.value;\n      this.setState(state => _objectSpread({}, state, {\n        match: _objectSpread({}, state.match, {\n          match_type: value\n        })\n      }));\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"Patching from MatchesForm.\");\n      event.preventDefault();\n      this.props.patchMatch(this.state, this.props.history); // Reset the form below.\n\n      this.setState({\n        match: {\n          date: \"\",\n          opponent_name: \"\",\n          match_type: \"\",\n          notes: \"\",\n          bookmarked: null\n        }\n      });\n    };\n  }\n\n  // Then componentDidMount will overwrite the state upon second render. This shows placeholder content.\n  // Props.match is provided by React router.\n  componentDidMount() {\n    fetch(`http://localhost:3000${this.props.match.url}`) // fetch(`http://localhost:3000/api/v1/players/${this.props.match.player_id}/matches/${this.props.match.params.id}`)\n    .then(response => response.json()).then(matchData => this.setState(_objectSpread({}, matchData))).catch(error => console.log(error));\n  }\n\n  render() {\n    console.log(\"EditMatchForm.js\", this.state\n    /*, this.props*/\n    );\n    debugger;\n    let gameCount = parseInt(this.state.match.match_type);\n    let gameInputs;\n    const gridRowStyle = {\n      paddingTop: \".1rem\",\n      paddingBottom: \".1rem\"\n    };\n\n    if (this.state.match.match_type) {\n      gameInputs = [...Array(gameCount)].map((game, i) => React.createElement(Grid, {\n        columns: \"equal\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        style: gridRowStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        fluid: true,\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Game \", i + 1))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Input, {\n        \"data-id\": i + 1,\n        placeholder: \"you\",\n        name: \"player_score\",\n        onChange: this.onChangeForGames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Input, {\n        \"data-id\": i + 1,\n        name: \"opponent_score\",\n        placeholder: \"opponent\" // value={this.state.opponent_name}\n        ,\n        onChange: this.onChangeForGames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })))));\n    }\n\n    return React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      textAlign: \"center\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Edit Match\"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Date\",\n      id: \"date\",\n      type: \"date\",\n      name: \"date\" // Value will create a preview of the match date but it does not update with handleOnChange. Needs more research.\n      // value={this.state.match.date}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"opponent_name\",\n      control: Input,\n      label: \"Opponent Name:\",\n      placeholder: this.state.match.opponent_name,\n      value: this.state.opponent_name,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Match Type:\"), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: \"Best of 7\",\n      name: \"match_type\" // control={Radio}\n      ,\n      value: \"7\",\n      checked: this.state.match.match_type === \"7\",\n      onChange: e => this.handleChecked(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: \"Best of 5\",\n      name: \"match_type\" // control={Radio}\n      ,\n      value: \"5\",\n      checked: this.state.match.match_type === \"5\",\n      onChange: e => this.handleChecked(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      style: {\n        minHeight: 90\n      },\n      name: \"notes\",\n      control: TextArea,\n      label: \"Notes:\",\n      placeholder: this.state.match.notes // value={this.state.notes}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), gameInputs, React.createElement(Form.Field, {\n      control: Button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default withRouter(EditMatchForm);","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/EditMatchForm.js"],"names":["React","Component","withRouter","Button","Header","Form","Input","Radio","TextArea","Grid","Menu","EditMatchForm","state","match","id","date","opponent_name","match_type","notes","bookmarked","player_id","games","handleOnChange","event","target","name","value","setState","handleChecked","e","parentElement","firstChild","handleSubmit","console","log","preventDefault","props","patchMatch","history","componentDidMount","fetch","url","then","response","json","matchData","catch","error","render","gameCount","parseInt","gameInputs","gridRowStyle","paddingTop","paddingBottom","Array","map","game","i","onChangeForGames","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\n\nimport {\n    Button,\n    Header,\n    Form,\n    Input,\n    Radio,\n    TextArea,\n    Grid,\n    Menu,\n} from 'semantic-ui-react'\n\nclass EditMatchForm extends Component {\n    // State has the additional key of match because componentDidMount's response is in the same format.\n    // The initial state structure is based on fetch from componentDidMount's fetch call.\n    state = {\n        match: {\n            id: \"\",\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: null,\n            player_id: null,\n            games: []\n        }\n    }\n\n    // Then componentDidMount will overwrite the state upon second render. This shows placeholder content.\n    // Props.match is provided by React router.\n    componentDidMount() {\n        fetch(`http://localhost:3000${this.props.match.url}`)\n        // fetch(`http://localhost:3000/api/v1/players/${this.props.match.player_id}/matches/${this.props.match.params.id}`)\n        .then(response => response.json())\n        .then(matchData => this.setState(\n            {...matchData}\n            ))\n            .catch(error => console.log(error))\n    }\n\n    handleOnChange = event => {\n        const { name, value } = event.target;\n        // const name = event.target.name;\n        // const value = event.target.value;\n        \n        // This sets State for match since it is nested within State.\n        this.setState( state => (\n                {...state, match: { ...state.match, [name] : value  } }\n            )\n        )\n    }\n\n    handleChecked = (e) => {\n        let value = e.target.parentElement.firstChild.value\n        this.setState( state => (\n            { ...state, match: { ...state.match, match_type: value } }\n            )\n        )\n    }\n\n    handleSubmit = (event) => {\n        console.log(\"Patching from MatchesForm.\")\n        event.preventDefault();\n        this.props.patchMatch(this.state, this.props.history);\n        // Reset the form below.\n        this.setState({\n            match: {\n                date: \"\",\n                opponent_name: \"\",\n                match_type: \"\",\n                notes: \"\",\n                bookmarked: null\n            }\n        });\n    }\n\n    render() {\n        console.log(\"EditMatchForm.js\", this.state /*, this.props*/)\n        debugger\n        let gameCount = parseInt(this.state.match.match_type);\n        let gameInputs\n        const gridRowStyle = {\n            paddingTop: \".1rem\",\n            paddingBottom: \".1rem\"\n        }\n\n        if (this.state.match.match_type) {\n            gameInputs = [...Array(gameCount)].map((game, i) => (\n                <Grid columns='equal' key={i}>\n                    <Grid.Row style={gridRowStyle}>\n                        <Grid.Column>\n                            <Menu fluid vertical>\n                                <Menu.Item className='header'>Game {i + 1}</Menu.Item>\n                            </Menu>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Input\n                                data-id={i + 1}\n                                placeholder='you'\n                                name=\"player_score\"\n                                onChange={this.onChangeForGames}\n                            />\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Input\n                                data-id={i + 1}\n                                name=\"opponent_score\"\n                                placeholder='opponent'\n                                // value={this.state.opponent_name}\n                                onChange={this.onChangeForGames}\n                            />\n                        </Grid.Column>\n                        {/* <Grid.Column>\n                            <Button form=\"game-form\">Save</Button>\n                        </Grid.Column> */}\n                    </Grid.Row>\n                </Grid>\n            )\n            )\n        }\n        return (\n            <Form onSubmit={event => this.handleSubmit(event)}>\n                <Header as='h3' block textAlign='center' color='blue'>\n                    Edit Match\n                </Header>\n                <Form.Group widths='equal'>\n                    <Form.Input\n                        fluid label='Date'\n                        id='date'\n                        type=\"date\"\n                        name=\"date\"\n                        // Value will create a preview of the match date but it does not update with handleOnChange. Needs more research.\n                        // value={this.state.match.date}\n                        onChange={this.handleOnChange} />\n\n                    <Form.Field\n                        name=\"opponent_name\"\n                        control={Input}\n                        label='Opponent Name:'\n                        placeholder={this.state.match.opponent_name}\n                        value={this.state.opponent_name}\n                        onChange={this.handleOnChange}\n                    />\n                </Form.Group>\n\n                <Form.Group inline>\n                    <label>Match Type:</label>\n                    <Form.Field>\n                        <Radio\n                            label='Best of 7'\n                            name=\"match_type\"\n                            // control={Radio}\n                            value='7'\n                            checked={this.state.match.match_type === \"7\"}\n                            onChange={(e) => this.handleChecked(e)}\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <Radio\n                            label='Best of 5'\n                            name=\"match_type\"\n                            // control={Radio}\n                            value='5'\n                            checked={this.state.match.match_type === \"5\"}\n                            onChange={(e) => this.handleChecked(e)}\n                        />\n                    </Form.Field>\n                </Form.Group>\n\n                <Form.Field style={{ minHeight: 90 }}\n                    name=\"notes\"\n                    control={TextArea}\n                    label='Notes:'\n                    placeholder={this.state.match.notes}\n                    // value={this.state.notes}\n                    onChange={this.handleOnChange}\n                />\n\n                {gameInputs}\n\n                <Form.Field\n                    control={Button}>\n                    Submit\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\nexport default withRouter(EditMatchForm)"]},"metadata":{},"sourceType":"module"}