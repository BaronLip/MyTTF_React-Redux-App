{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/EditMatchForm.js\";\nimport React, { Component } from 'react'; // import { connect } from \"react-redux\";\n\nimport { Button, Header, Form, Input, Radio, TextArea } from 'semantic-ui-react';\nexport default class EditMatchForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: \"\",\n      opponent_name: \"\",\n      match_type: \"\",\n      notes: \"\"\n    };\n\n    this.handleOnChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleChecked = (e, {\n      value\n    }) => this.setState({\n      match_type: value\n    });\n\n    this.handleSubmit = event => {\n      console.log(\"Patching from MatchesForm.\");\n      event.preventDefault();\n      this.props.patchMatch(_objectSpread({}, this.state, {\n        bookmarked: false\n      })); // Reset the form below.\n\n      this.setState({\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/api/v1/matches/${this.props.match.params.id}`).then(response => response.json()).then(matchData => this.setState({\n      match: matchData\n    })).catch(error => console.log(error));\n  }\n\n  render() {\n    console.log(\"EditMatchForm.js\", this.state, this.props);\n    return React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      textAlign: \"center\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Edit Match\"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Date\",\n      placeholder: \"Date:\",\n      type: \"date\",\n      name: \"date\" // Date input does not need to be controlled form for value to pass into state. \n      // value={this.state.date}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"opponent_name\",\n      control: Input,\n      label: \"Opponent Name:\",\n      placeholder: this.state.opponent_name,\n      value: this.state.opponent_name,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Match Type:\"), React.createElement(Form.Field, {\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 7\",\n      value: \"7\" // checked={this.state.match_type === \"7\"}\n      ,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 5\",\n      value: \"5\" // checked={this.state.match_type === \"5\"}\n      ,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      style: {\n        minHeight: 90\n      },\n      name: \"notes\",\n      control: TextArea,\n      label: \"Notes:\",\n      placeholder: \"Notes\" // value={this.state.notes}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/EditMatchForm.js"],"names":["React","Component","Button","Header","Form","Input","Radio","TextArea","EditMatchForm","state","date","opponent_name","match_type","notes","handleOnChange","event","target","name","value","setState","console","log","handleChecked","e","handleSubmit","preventDefault","props","patchMatch","bookmarked","componentDidMount","fetch","match","params","id","then","response","json","matchData","catch","error","render","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { connect } from \"react-redux\";\n\nimport {\n    Button,\n    Header,\n    Form,\n    Input,\n    Radio,\n    TextArea,\n} from 'semantic-ui-react'\n\nexport default class EditMatchForm extends Component {\n    state = {\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n    }\n    componentDidMount() {\n        fetch(`http://localhost:3000/api/v1/matches/${this.props.match.params.id}`)\n        .then(response => response.json())\n        .then(matchData => this.setState(\n            {match: matchData}\n        ))\n        .catch(error => console.log(error))\n    }\n\n    handleOnChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }\n\n    handleChecked = (e, { value }) => this.setState({ match_type: value })\n\n    handleSubmit = event => {\n        console.log(\"Patching from MatchesForm.\")\n        event.preventDefault();\n        this.props.patchMatch({ ...this.state, bookmarked: false });\n        // Reset the form below.\n        this.setState({\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: false,\n        });\n    }\n\n    render() {\n        console.log(\"EditMatchForm.js\", this.state, this.props)\n\n        return (\n            <Form onSubmit={event => this.handleSubmit(event)}>\n                <Header as='h3' block textAlign='center' color='blue'>\n                    Edit Match\n                </Header>\n                <Form.Group widths='equal'>\n                    <Form.Input\n                        fluid label='Date'\n                        placeholder='Date:'\n                        type=\"date\"\n                        name=\"date\"\n                        // Date input does not need to be controlled form for value to pass into state. \n                        // value={this.state.date}\n                        onChange={this.handleOnChange} />\n\n                    <Form.Field\n                        name=\"opponent_name\"\n                        control={Input}\n                        label='Opponent Name:'\n                        placeholder={this.state.opponent_name}\n                        value={this.state.opponent_name}\n                        onChange={this.handleOnChange}\n                    />\n                </Form.Group>\n\n                <Form.Group inline>\n                    <label>Match Type:</label>\n                    <Form.Field\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 7'\n                        value='7'\n                        // checked={this.state.match_type === \"7\"}\n                        onChange={this.handleChecked}\n                    />\n                    <Form.Field\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 5'\n                        value='5'\n                        // checked={this.state.match_type === \"5\"}\n                        onChange={this.handleChecked}\n                    />\n                </Form.Group>\n\n                <Form.Field style={{ minHeight: 90 }}\n                    name=\"notes\"\n                    control={TextArea}\n                    label='Notes:'\n                    placeholder='Notes'\n                    // value={this.state.notes}\n                    onChange={this.handleOnChange}\n                />\n                <Form.Field\n                    control={Button}>\n                    Submit\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}