{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconsole.log(\"reducers/PlayersReducer.js\"); // Sets an initial state for a Player and will be overwritten by fetch within Dashboard.js\n// The initial state needs to match the format of the returned state.\n// This may need to change based fetch call.\n\nexport default ((state = {\n  \"player\": {\n    \"username\": \"\",\n    \"profileImage\": \"\",\n    \"wins\": 0,\n    \"losses\": 0\n  },\n  \"matches\": []\n}, action) => {\n  switch (action.type) {\n    //***** PLAYER REDUCERS: *****\n    case \"FETCH_PLAYER\":\n      console.log(\"You're fetching a player\", state, action); // debugger\n\n      return [...state, action.player];\n\n    case \"SHOW_PLAYER\":\n      console.log(\"You're showing a player\", state, action);\n      return _objectSpread({}, state, {}, action.player);\n    //***** MATCH REDUCERS: *****\n\n    case \"BOOKMARK_MATCH\":\n      console.log(\"You're bookmarking a match\", state, action);\n      let bookmarkedMatch = state.matches.find(match => match.id === action.match.id);\n      let index = state.matches.indexOf(bookmarkedMatch);\n\n      let newMatch = _objectSpread({}, bookmarkedMatch, {\n        bookmarked: !bookmarkedMatch.bookmarked\n      });\n\n      return _objectSpread({}, state, {\n        matches: [...state.matches.slice(0, index), newMatch, ...state.matches.slice(index + 1)]\n      });\n\n    case \"ADD_MATCH\":\n      console.log(\"You're adding a match\", state, action);\n\n      const addMatch = _objectSpread({}, action.match); // debugger\n\n\n      if (action.match.match.win === true) {\n        state.player.wins += 1;\n      } else if (action.match.match.loss === true) {\n        state.player.losses += 1;\n      }\n\n      return _objectSpread({}, state, {\n        matches: [...state.matches, addMatch.match],\n        games: [...state.games, ...addMatch.games]\n      });\n\n    case \"EDIT_MATCH\":\n      console.log(\"MatchesReducer, EDIT_MATCH\", state, action);\n      debugger;\n      let copyOfPlayer = state;\n      let editedMatch = state.matches.find(match => match.id === action.match.match.id);\n      let matchIndex = state.matches.indexOf(editedMatch);\n      let updatedGames = action.match.games;\n      let currentGames = state.games;\n\n      if (action.match.match.win === true) {// state.player.wins += 1;\n        // state.player.losses -= 1;\n      } else if (action.match.match.win === null) {\n        state.player.wins -= 1;\n        state.player.losses += 1;\n      }\n\n      currentGames.forEach(game => {\n        let matchingGame = updatedGames.filter(updatedGame => updatedGame.id === game.id);\n        game.player_score = matchingGame.player_score;\n        game.opponent_score = matchingGame.opponent_score;\n      });\n      return _objectSpread({}, state, {\n        player: _objectSpread({}, state.player),\n        matches: [...state.matches.slice(0, matchIndex), editedMatch, ...state.matches.slice(matchIndex + 1)],\n        games: [...currentGames]\n      });\n\n    case \"REMOVE_MATCH\":\n      console.log(\"You're deleting a match\", state, action);\n      let playerCopy = state.player;\n      let matchDeleted = state.matches.find(match => match.id === action.matchId);\n\n      if (matchDeleted.win === true) {\n        playerCopy.wins -= 1;\n      } else {\n        playerCopy.losses -= 1;\n      }\n\n      const matchesAfterDelete = state.matches.filter(match => match.id !== action.matchId);\n      return _objectSpread({}, state, {\n        player: playerCopy,\n        matches: matchesAfterDelete\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/reducers/PlayersReducer.js"],"names":["console","log","state","action","type","player","bookmarkedMatch","matches","find","match","id","index","indexOf","newMatch","bookmarked","slice","addMatch","win","wins","loss","losses","games","copyOfPlayer","editedMatch","matchIndex","updatedGames","currentGames","forEach","game","matchingGame","filter","updatedGame","player_score","opponent_score","playerCopy","matchDeleted","matchId","matchesAfterDelete"],"mappings":"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","sourcesContent":["console.log(\"reducers/PlayersReducer.js\")\n// Sets an initial state for a Player and will be overwritten by fetch within Dashboard.js\n// The initial state needs to match the format of the returned state.\n// This may need to change based fetch call.\nexport default (state = \n    {\n        \"player\": {\n            \"username\": \"\",\n            \"profileImage\": \"\",\n            \"wins\": 0,\n            \"losses\": 0,\n        },\n        \"matches\": []\n    }\n    , action) => {\n    \n    switch (action.type) {\n    \n    //***** PLAYER REDUCERS: *****\n        case \"FETCH_PLAYER\":\n            console.log(\"You're fetching a player\", state, action);\n            // debugger\n            return [...state, action.player];\n\n        case \"SHOW_PLAYER\":\n            console.log(\"You're showing a player\", state, action);\n            return { ...state, ...action.player }\n\n\n    //***** MATCH REDUCERS: *****\n        case \"BOOKMARK_MATCH\":\n            console.log(\"You're bookmarking a match\", state, action);\n\n            let bookmarkedMatch = state.matches.find(match => match.id === action.match.id)\n            let index = state.matches.indexOf(bookmarkedMatch)\n            let newMatch = {...bookmarkedMatch, bookmarked: !bookmarkedMatch.bookmarked }\n\n            return { ...state, matches: [...state.matches.slice(0, index), newMatch, ...state.matches.slice(index + 1)]}\n        \n        case \"ADD_MATCH\":\n            console.log(\"You're adding a match\", state, action);\n            const addMatch = { ...action.match };\n            // debugger\n            if (action.match.match.win === true) { \n                state.player.wins += 1 \n            } else if (action.match.match.loss === true) { \n                state.player.losses += 1 \n            }\n\n            return { ...state, matches: [...state.matches, addMatch.match], games: [...state.games, ...addMatch.games]}\n\n        case \"EDIT_MATCH\":\n            console.log(\"MatchesReducer, EDIT_MATCH\", state, action);\n            debugger\n            let copyOfPlayer = state\n            let editedMatch = state.matches.find(match => match.id === action.match.match.id)\n            let matchIndex = state.matches.indexOf(editedMatch)\n\n            let updatedGames = action.match.games\n            let currentGames = state.games\n\n            if (action.match.match.win === true) {\n                // state.player.wins += 1;\n                // state.player.losses -= 1;\n            } else if (action.match.match.win === null) {\n                state.player.wins -= 1;\n                state.player.losses += 1;\n            }\n            \n\n\n            currentGames.forEach((game) => {\n                let matchingGame = updatedGames.filter(updatedGame => updatedGame.id === game.id);\n                game.player_score = matchingGame.player_score;\n                game.opponent_score = matchingGame.opponent_score;\n            })\n\n            return {\n                ...state, player: {...state.player},\n                matches: [...state.matches.slice(0, matchIndex), editedMatch, ...state.matches.slice(matchIndex + 1)],\n                games: [...currentGames]}\n\n        \n        \n        case \"REMOVE_MATCH\":\n            console.log(\"You're deleting a match\", state, action);\n            let playerCopy = state.player\n            let matchDeleted = state.matches.find((match) => match.id === action.matchId)\n            \n            if (matchDeleted.win === true) {\n                playerCopy.wins -= 1\n            } else {\n                playerCopy.losses -= 1\n            }\n\n            const matchesAfterDelete = state.matches.filter((match) => match.id !== action.matchId)\n            return {...state, player: playerCopy, matches: matchesAfterDelete }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}