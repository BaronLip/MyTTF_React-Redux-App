{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconsole.log(\"reducers/PlayersReducer.js\"); // Sets an initial state for a Player and will be overwritten by fetch within Dashboard.js\n// The initial state needs to match the format of the returned state.\n// This may need to change based fetch call.\n\nexport default ((state = {\n  \"player\": {\n    \"username\": \"\",\n    \"profileImage\": \"\",\n    \"wins\": 0,\n    \"losses\": 0\n  },\n  \"matches\": []\n}, action) => {\n  switch (action.type) {\n    //***** PLAYER REDUCERS: *****\n    case \"FETCH_PLAYER\":\n      console.log(\"You're fetching a player\", state, action); // debugger\n\n      return [...state, action.player];\n\n    case \"SHOW_PLAYER\":\n      console.log(\"You're showing a player\", state, action);\n      return _objectSpread({}, state, {}, action.player);\n    //***** MATCH REDUCERS: *****\n\n    case \"BOOKMARK_MATCH\":\n      console.log(\"You're bookmarking a match\", state, action);\n      let bookmarkedMatch = state.matches.find(match => match.id === action.match.id);\n      let index = state.matches.indexOf(bookmarkedMatch);\n\n      let newMatch = _objectSpread({}, bookmarkedMatch, {\n        bookmarked: !bookmarkedMatch.bookmarked\n      });\n\n      return _objectSpread({}, state, {\n        matches: [...state.matches.slice(0, index), newMatch, ...state.matches.slice(index + 1)].sort((a, b) => b.bookmarked - a.bookmarked)\n      });\n\n    case \"ADD_MATCH\":\n      console.log(\"You're adding a match\", state, action);\n\n      const addMatch = _objectSpread({}, action.match);\n\n      if (action.match.match.win === true) {\n        state.player.wins += 1;\n      } else if (action.match.match.loss === true) {\n        state.player.losses += 1;\n      }\n\n      return _objectSpread({}, state, {\n        matches: [...state.matches, addMatch.match],\n        games: [...state.games, ...addMatch.games]\n      });\n\n    case \"EDIT_MATCH\":\n      console.log(\"MatchesReducer, EDIT_MATCH\", state, action);\n      let copyOfPlayer = state.player;\n      let updatedMatch = action.match.match;\n      let editMatch = state.matches.find(match => match.id === updatedMatch.id);\n      let matchIndex = state.matches.indexOf(editMatch);\n\n      if (updatedMatch.win === true && editMatch.win === null) {\n        copyOfPlayer.wins += 1;\n        copyOfPlayer.losses -= 1;\n        Object.assign(editMatch, updatedMatch);\n      } else if (updatedMatch.win === null && editMatch.win === true) {\n        copyOfPlayer.wins -= 1;\n        copyOfPlayer.losses += 1;\n        Object.assign(editMatch, updatedMatch);\n      }\n\n      let updatedGames = action.match.games;\n      let currentGames = state.games;\n      updatedGames.forEach(game => {\n        let matchingGame;\n        matchingGame = currentGames.filter(currentGame => currentGame.id === game.id);\n        matchingGame[0].player_score = game.player_score;\n        matchingGame[0].opponent_score = game.opponent_score;\n      });\n      return _objectSpread({}, state, {\n        player: _objectSpread({}, copyOfPlayer),\n        matches: [...state.matches.slice(0, matchIndex), editMatch, ...state.matches.slice(matchIndex + 1)],\n        games: [...currentGames]\n      });\n\n    case \"REMOVE_MATCH\":\n      console.log(\"You're deleting a match\", state, action);\n      let playerCopy = state.player;\n      let matchDeleted = state.matches.find(match => match.id === action.matchId);\n\n      if (matchDeleted.win === true) {\n        playerCopy.wins -= 1;\n      } else {\n        playerCopy.losses -= 1;\n      }\n\n      const matchesAfterDelete = state.matches.filter(match => match.id !== action.matchId);\n      return _objectSpread({}, state, {\n        player: playerCopy,\n        matches: matchesAfterDelete\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/reducers/PlayersReducer.js"],"names":["console","log","state","action","type","player","bookmarkedMatch","matches","find","match","id","index","indexOf","newMatch","bookmarked","slice","sort","a","b","addMatch","win","wins","loss","losses","games","copyOfPlayer","updatedMatch","editMatch","matchIndex","Object","assign","updatedGames","currentGames","forEach","game","matchingGame","filter","currentGame","player_score","opponent_score","playerCopy","matchDeleted","matchId","matchesAfterDelete"],"mappings":"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","sourcesContent":["console.log(\"reducers/PlayersReducer.js\")\n// Sets an initial state for a Player and will be overwritten by fetch within Dashboard.js\n// The initial state needs to match the format of the returned state.\n// This may need to change based fetch call.\nexport default (state = \n    {\n        \"player\": {\n            \"username\": \"\",\n            \"profileImage\": \"\",\n            \"wins\": 0,\n            \"losses\": 0,\n        },\n        \"matches\": []\n    }\n    , action) => {\n    \n    switch (action.type) {\n    \n    //***** PLAYER REDUCERS: *****\n        case \"FETCH_PLAYER\":\n            console.log(\"You're fetching a player\", state, action);\n            // debugger\n            return [...state, action.player];\n\n        case \"SHOW_PLAYER\":\n            console.log(\"You're showing a player\", state, action);\n            return { ...state, ...action.player }\n\n\n    //***** MATCH REDUCERS: *****\n        case \"BOOKMARK_MATCH\":\n            console.log(\"You're bookmarking a match\", state, action);\n\n            let bookmarkedMatch = state.matches.find(match => match.id === action.match.id)\n            let index = state.matches.indexOf(bookmarkedMatch)\n            let newMatch = {...bookmarkedMatch, bookmarked: !bookmarkedMatch.bookmarked }\n\n            return { ...state, matches: [...state.matches.slice(0, index), newMatch, ...state.matches.slice(index + 1)].sort((a, b) => b.bookmarked - a.bookmarked)}\n        \n        case \"ADD_MATCH\":\n            console.log(\"You're adding a match\", state, action);\n            const addMatch = { ...action.match };\n\n            if (action.match.match.win === true) { \n                state.player.wins += 1 \n            } else if (action.match.match.loss === true) { \n                state.player.losses += 1 \n            }\n\n            return { ...state, matches: [...state.matches, addMatch.match], games: [...state.games, ...addMatch.games]}\n\n        case \"EDIT_MATCH\":\n            console.log(\"MatchesReducer, EDIT_MATCH\", state, action);\n            let copyOfPlayer = state.player\n            let updatedMatch = action.match.match\n            let editMatch = state.matches.find(match => match.id === updatedMatch.id)\n            let matchIndex = state.matches.indexOf(editMatch)\n\n            if (updatedMatch.win === true && editMatch.win === null) {\n                copyOfPlayer.wins += 1;\n                copyOfPlayer.losses -= 1;\n                Object.assign(editMatch, updatedMatch);\n            } else if (updatedMatch.win === null && editMatch.win === true) {\n                copyOfPlayer.wins -= 1;\n                copyOfPlayer.losses += 1;\n                Object.assign(editMatch, updatedMatch);\n            }\n            \n            let updatedGames = action.match.games\n            let currentGames = state.games\n            \n            updatedGames.forEach((game) => {\n                let matchingGame;\n                matchingGame = currentGames.filter(currentGame => currentGame.id === game.id);\n                matchingGame[0].player_score = game.player_score;\n                matchingGame[0].opponent_score = game.opponent_score;\n            })\n            \n            return {...state, \n                player: {...copyOfPlayer},\n                matches: [...state.matches.slice(0, matchIndex), editMatch, ...state.matches.slice(matchIndex + 1)],\n                games: [...currentGames]\n            }\n        \n        case \"REMOVE_MATCH\":\n            console.log(\"You're deleting a match\", state, action);\n            let playerCopy = state.player\n            let matchDeleted = state.matches.find((match) => match.id === action.matchId)\n            \n            if (matchDeleted.win === true) {\n                playerCopy.wins -= 1\n            } else {\n                playerCopy.losses -= 1\n            }\n\n            const matchesAfterDelete = state.matches.filter((match) => match.id !== action.matchId)\n            return {...state, player: playerCopy, matches: matchesAfterDelete }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}