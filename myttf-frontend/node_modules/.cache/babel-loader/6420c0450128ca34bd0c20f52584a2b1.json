{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/EditMatchForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Form, Input, Radio, TextArea } from 'semantic-ui-react';\nexport default class EditMatchForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      match: {\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: null\n      }\n    };\n\n    this.handleOnChange = event => {\n      debugger;\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        state: _objectSpread({}, this.state.match, {\n          [name]: value\n        })\n      }); // this.setState({ \n      //     match: {\n      //         [name]: value\n      //     }\n      // });\n\n      console.log(this.state);\n    };\n\n    this.handleChecked = (e, {\n      value\n    }) => this.setState({\n      match_type: value\n    });\n\n    this.handleSubmit = event => {\n      console.log(\"Patching from MatchesForm.\");\n      event.preventDefault();\n      this.props.patchMatch(this.state); // Reset the form below.\n\n      this.setState({\n        date: \"\",\n        opponent_name: \"\",\n        match_type: \"\",\n        notes: \"\",\n        bookmarked: false\n      });\n    };\n  }\n\n  // Then componentDidMount will overwrite the state upon second render.\n  componentDidMount() {\n    fetch(`http://localhost:3000${this.props.match.url}`) // fetch(`http://localhost:3000/api/v1/players/${this.props.match.player_id}/matches/${this.props.match.params.id}`)\n    .then(response => response.json()).then(matchData => this.setState(_objectSpread({}, matchData))).catch(error => console.log(error));\n  }\n\n  render() {\n    console.log(\"EditMatchForm.js\", this.state, this.props); // debugger\n\n    return React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      textAlign: \"center\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Edit Match\"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Date\",\n      placeholder: \"Date:\",\n      type: \"date\",\n      name: \"date\" // Date input does not need to be controlled form for value to pass into state. \n      // value={this.state.date}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"opponent_name\",\n      control: Input,\n      label: \"Opponent Name:\",\n      placeholder: this.state.match.opponent_name // value={this.state.opponent_name}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Match Type:\"), React.createElement(Form.Field, {\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 7\",\n      value: \"7\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      name: \"match_type\",\n      control: Radio,\n      label: \"Best of 5\",\n      value: \"5\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      style: {\n        minHeight: 90\n      },\n      name: \"notes\",\n      control: TextArea,\n      label: \"Notes:\",\n      placeholder: this.state.match.notes // value={this.state.notes}\n      ,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/components/EditMatchForm.js"],"names":["React","Component","Button","Header","Form","Input","Radio","TextArea","EditMatchForm","state","match","date","opponent_name","match_type","notes","bookmarked","handleOnChange","event","target","name","value","setState","console","log","handleChecked","e","handleSubmit","preventDefault","props","patchMatch","componentDidMount","fetch","url","then","response","json","matchData","catch","error","render","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    Button,\n    Header,\n    Form,\n    Input,\n    Radio,\n    TextArea,\n} from 'semantic-ui-react'\n\nexport default class EditMatchForm extends Component {\n    // State has the additional key of match because componentDidMount's response is in the same format.\n    state = {\n        match: {\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: null\n        }\n    }\n\n    // Then componentDidMount will overwrite the state upon second render.\n    componentDidMount() {\n        fetch(`http://localhost:3000${this.props.match.url}`)\n        // fetch(`http://localhost:3000/api/v1/players/${this.props.match.player_id}/matches/${this.props.match.params.id}`)\n        .then(response => response.json())\n        .then(matchData => this.setState(\n            {...matchData}\n        ))\n        .catch(error => console.log(error))\n    }\n\n    handleOnChange = event => {\n        debugger\n        const { name, value } = event.target;\n        this.setState({\n            state: {\n                ...this.state.match,  [name]: value }\n            }\n        );\n        // this.setState({ \n        //     match: {\n        //         [name]: value\n        //     }\n        // });\n        console.log(this.state)\n    }\n\n    handleChecked = (e, { value }) => this.setState({ match_type: value })\n\n    handleSubmit = (event) => {\n        console.log(\"Patching from MatchesForm.\")\n        event.preventDefault();\n        this.props.patchMatch(this.state);\n        // Reset the form below.\n        this.setState({\n            date: \"\",\n            opponent_name: \"\",\n            match_type: \"\",\n            notes: \"\",\n            bookmarked: false,\n        });\n    }\n\n    render() {\n        console.log(\"EditMatchForm.js\", this.state, this.props)\n        // debugger\n        return (\n            <Form onSubmit={event => this.handleSubmit(event)}>\n                <Header as='h3' block textAlign='center' color='blue'>\n                    Edit Match\n                </Header>\n                <Form.Group widths='equal'>\n                    <Form.Input\n                        fluid label='Date'\n                        placeholder='Date:'\n                        type=\"date\"\n                        name=\"date\"\n                        // Date input does not need to be controlled form for value to pass into state. \n                        // value={this.state.date}\n                        onChange={this.handleOnChange} />\n\n                    <Form.Field\n                        name=\"opponent_name\"\n                        control={Input}\n                        label='Opponent Name:'\n                        placeholder={this.state.match.opponent_name}\n                        // value={this.state.opponent_name}\n                        onChange={this.handleOnChange}\n                    />\n                </Form.Group>\n\n                <Form.Group inline>\n                    <label>Match Type:</label>\n                    <Form.Field\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 7'\n                        value='7'\n                        onChange={this.handleChecked}\n                    />\n                    <Form.Field\n                        name=\"match_type\"\n                        control={Radio}\n                        label='Best of 5'\n                        value='5'\n                        onChange={this.handleChecked}\n                    />\n                </Form.Group>\n\n                <Form.Field style={{ minHeight: 90 }}\n                    name=\"notes\"\n                    control={TextArea}\n                    label='Notes:'\n                    placeholder={this.state.match.notes}\n                    // value={this.state.notes}\n                    onChange={this.handleOnChange}\n                />\n                <Form.Field\n                    control={Button}>\n                    Submit\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}