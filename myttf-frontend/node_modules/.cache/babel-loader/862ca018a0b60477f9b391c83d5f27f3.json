{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconsole.log(\"reducers/PlayersReducer.js\"); // Sets an initial state for a Player and will be overwritten by fetch within Dashboard.js\n// The initial state needs to match the format of the returned state.\n// This may need to change based fetch call.\n\nexport default ((state = {\n  \"player\": {\n    \"username\": \"\",\n    \"profileImage\": \"\",\n    \"wins\": 0,\n    \"losses\": 0\n  },\n  \"matches\": []\n}, action) => {\n  switch (action.type) {\n    // case \"FETCH_PLAYER\":\n    //     console.log(\"You're fetching a player\", state, action);\n    //     // debugger\n    //     return [...state, action.player];\n    case \"BOOKMARK_MATCH\":\n      console.log(\"You're bookmarking a match\", state, action); // debugger\n\n      debugger; //let player = state.find(player => player.id === action.match.player_id)\n\n      let playerIndex = state.indexOf(player);\n      let bookmarkedMatch = player.matches.find(match => match.id === action.match.id);\n      let index = player.matches.indexOf(bookmarkedMatch);\n\n      let newMatch = _objectSpread({}, bookmarkedMatch, {\n        bookmarked: !bookmarkedMatch.bookmarked\n      });\n\n      let newPlayer = _objectSpread({}, player, {\n        matches: [...player.matches.slice(0, index), newMatch, ...player.matches.slice(index + 1)]\n      });\n\n      return [...state.slice(0, playerIndex), newPlayer, ...state.slice(playerIndex + 1)];\n\n    case \"SHOW_PLAYER\":\n      console.log(\"You're showing a player\", state, action); // debugger\n\n      return _objectSpread({}, state, {}, action.player);\n    // return { state: {...state, ...action.player} }\n\n    case \"ADD_PLAYER\":\n      console.log(\"You're adding a player\", state, action); // debugger\n\n      return [...state, action.player];\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/reducers/PlayersReducer.js"],"names":["console","log","state","action","type","playerIndex","indexOf","player","bookmarkedMatch","matches","find","match","id","index","newMatch","bookmarked","newPlayer","slice"],"mappings":";AAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,E,CAEA;AACA;AACA;;AACA,gBAAe,CAACC,KAAK,GACjB;AACI,YAAU;AACN,gBAAY,EADN;AAEN,oBAAgB,EAFV;AAGN,YAAQ,CAHF;AAIN,cAAU;AAJJ,GADd;AAOI,aAAW;AAPf,CADW,EAUTC,MAVS,KAUE;AAEb,UAAQA,MAAM,CAACC,IAAf;AAEI;AACA;AACA;AACA;AAEA,SAAK,gBAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CC,KAA1C,EAAiDC,MAAjD,EADJ,CAEI;;AACA,eAHJ,CAII;;AACA,UAAIE,WAAW,GAAGH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAlB;AAEA,UAAIC,eAAe,GAAGD,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaT,MAAM,CAACQ,KAAP,CAAaC,EAAvD,CAAtB;AACA,UAAIC,KAAK,GAAGN,MAAM,CAACE,OAAP,CAAeH,OAAf,CAAuBE,eAAvB,CAAZ;;AAEA,UAAIM,QAAQ,qBAAON,eAAP;AAAwBO,QAAAA,UAAU,EAAE,CAACP,eAAe,CAACO;AAArD,QAAZ;;AAEA,UAAIC,SAAS,qBAAOT,MAAP;AAAeE,QAAAA,OAAO,EAAE,CAAC,GAAGF,MAAM,CAACE,OAAP,CAAeQ,KAAf,CAAqB,CAArB,EAAwBJ,KAAxB,CAAJ,EAAoCC,QAApC,EAA8C,GAAGP,MAAM,CAACE,OAAP,CAAeQ,KAAf,CAAqBJ,KAAK,GAAG,CAA7B,CAAjD;AAAxB,QAAb;;AAEA,aAAO,CACH,GAAGX,KAAK,CAACe,KAAN,CAAY,CAAZ,EAAeZ,WAAf,CADA,EAC6BW,SAD7B,EACwC,GAAGd,KAAK,CAACe,KAAN,CAAYZ,WAAW,GAAG,CAA1B,CAD3C,CAAP;;AAIJ,SAAK,aAAL;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,KAAvC,EAA8CC,MAA9C,EADJ,CAEI;;AACA,+BAAWD,KAAX,MAAqBC,MAAM,CAACI,MAA5B;AACA;;AAEJ,SAAK,YAAL;AACIP,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCC,KAAtC,EAA6CC,MAA7C,EADJ,CAEI;;AACA,aAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACI,MAAlB,CAAP;;AAEJ;AACI,aAAOL,KAAP;AArCR;AAuCH,CAnDD","sourcesContent":["console.log(\"reducers/PlayersReducer.js\")\n\n// Sets an initial state for a Player and will be overwritten by fetch within Dashboard.js\n// The initial state needs to match the format of the returned state.\n// This may need to change based fetch call.\nexport default (state = \n    {\n        \"player\": {\n            \"username\": \"\",\n            \"profileImage\": \"\",\n            \"wins\": 0,\n            \"losses\": 0,\n        },\n        \"matches\": []\n    }\n    , action) => {\n    \n    switch (action.type) {\n\n        // case \"FETCH_PLAYER\":\n        //     console.log(\"You're fetching a player\", state, action);\n        //     // debugger\n        //     return [...state, action.player];\n\n        case \"BOOKMARK_MATCH\":\n            console.log(\"You're bookmarking a match\", state, action);\n            // debugger\n            debugger\n            //let player = state.find(player => player.id === action.match.player_id)\n            let playerIndex = state.indexOf(player)\n\n            let bookmarkedMatch = player.matches.find(match => match.id === action.match.id)\n            let index = player.matches.indexOf(bookmarkedMatch)\n            \n            let newMatch = {...bookmarkedMatch, bookmarked: !bookmarkedMatch.bookmarked }\n\n            let newPlayer = {...player, matches: [...player.matches.slice(0, index), newMatch, ...player.matches.slice(index + 1)]}\n            \n            return [\n                ...state.slice(0, playerIndex), newPlayer, ...state.slice(playerIndex + 1)\n            ]\n\n        case \"SHOW_PLAYER\":\n            console.log(\"You're showing a player\", state, action);\n            // debugger\n            return {...state, ...action.player}\n            // return { state: {...state, ...action.player} }\n\n        case \"ADD_PLAYER\":\n            console.log(\"You're adding a player\", state, action);\n            // debugger\n            return [...state, action.player];\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}