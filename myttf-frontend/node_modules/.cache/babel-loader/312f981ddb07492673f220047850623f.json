{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const fetchMatches = player => {\n  console.log(\"actions/MatchActions.js fetchMatches\");\n  return dispatch => {\n    debugger;\n    fetch(`http://localhost:3000/api/v1/players/${player.id}/matches`).then(response => response.json()).then(matches => console.log(matches)); // .then(matches => dispatch(setMatches(matches)))\n    // .catch(error => console.log(error))\n  };\n};\nexport const setMatches = matches => {\n  return {\n    type: \"FETCH_MATCHES\",\n    matches\n  };\n};\nexport const showMatch = match => {\n  console.log(\"actions/MatchActions.js showMatch\", match);\n  return {\n    type: \"SHOW_MATCH\",\n    match\n  };\n};\nexport const createMatch = match => {\n  console.log(\"Creating a new match.\", match); // Post  the fetch to the server...\n\n  return dispatch => fetch('http://localhost:3000/api/v1/matches', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(match)\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(`${response.statusText} make sure to fill in all the blanks.`);\n    } // // Needs experimental syntax plugin in order to throw expression.\n    // if (!response.ok) {\n    //     response.text().then(text => throw Error(text))\n    // }\n    // else {\n    //     return response.json();\n    // }\n\n  }) // ...reflect the added match to the window...\n  .then(match => {\n    dispatch(addMatch(match));\n  }) // ...or show an error.\n  .catch(error => alert(error));\n}; // match arg is equal to {...this.state} from MatchesForm at submission.\n\nexport const addMatch = match => {\n  console.log(\"actions/MatchActions.js addMatch\", match);\n  return {\n    type: \"ADD_MATCH\",\n    match\n  };\n};\nexport const deleteMatch = matchId => {\n  console.log(\"actions/MatchActions.js deleteMatch\", matchId);\n  return dispatch => fetch(`http://localhost:3000/api/v1/matches/${matchId}`, {\n    method: \"DELETE\"\n  }).then(() => {\n    dispatch(removeMatch(matchId));\n  });\n};\nexport const removeMatch = matchId => {\n  console.log(\"actions/MatchActions.js removeMatch\", matchId);\n  return {\n    type: \"REMOVE_MATCH\",\n    matchId\n  };\n};\nexport const bookmark = match => {\n  console.log(\"You're bookmarking this match.\", match); // debugger\n\n  let newMatch = _objectSpread({}, match);\n\n  if (match.bookmarked === null || match.bookmarked === false) {\n    newMatch.bookmarked = true;\n  } else {\n    newMatch.bookmarked = false;\n  }\n\n  return dispatch => fetch(`http://localhost:3000/api/v1/players/${match.player_id}/matches/${match.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      match: newMatch\n    })\n  }).then(() => {\n    dispatch(bookmarkMatch(newMatch));\n  });\n};\nexport const bookmarkMatch = match => {\n  return {\n    type: \"BOOKMARK_MATCH\",\n    match\n  };\n};\nexport const fetchMatch = matchId => {\n  console.log(\"actions/MatchActions.js fetchMatch\", matchId);\n  fetch(`http://localhost:3000/api/v1/match/${matchId}`).then(response => response.json()).then(match => console.log(match)) // .then(match => match)\n  .catch(error => console.log(error));\n};\nexport const patchMatch = match => {\n  console.log(\"You're patching this match.\", match);\n  return dispatch => fetch(`http://localhost:3000/api/v1/matches/${match.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(match)\n  }) // Without throwing any errors.\n  // .then(() => { dispatch(editMatch(match));\n  // })\n  .then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(`${response.statusText} make sure to fill in all the blanks.`);\n    }\n  }).then(match => {\n    dispatch(editMatch(match));\n  }).catch(error => alert(error));\n};\nexport const editMatch = match => {\n  console.log(\"You're editing this match.\", match);\n  return {\n    type: \"EDIT_MATCH\",\n    match\n  };\n};","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/actions/MatchActions.js"],"names":["fetchMatches","player","console","log","dispatch","fetch","id","then","response","json","matches","setMatches","type","showMatch","match","createMatch","method","headers","body","JSON","stringify","ok","Error","statusText","addMatch","catch","error","alert","deleteMatch","matchId","removeMatch","bookmark","newMatch","bookmarked","player_id","bookmarkMatch","fetchMatch","patchMatch","editMatch"],"mappings":"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","sourcesContent":["export const fetchMatches = (player) => {\n    console.log(\"actions/MatchActions.js fetchMatches\");\n\n    return (dispatch) => {\n        debugger\n        fetch(`http://localhost:3000/api/v1/players/${player.id}/matches`)\n            .then(response => response.json())\n            .then(matches => console.log(matches))\n            // .then(matches => dispatch(setMatches(matches)))\n            // .catch(error => console.log(error))\n    };\n}\n\nexport const setMatches = (matches) => {\n    return {type: \"FETCH_MATCHES\", matches}\n}\n\nexport const showMatch = (match) => {\n    console.log(\"actions/MatchActions.js showMatch\", match);\n    return { type: \"SHOW_MATCH\", match };\n}\n\nexport const createMatch = (match) => {\n    console.log(\"Creating a new match.\", match);\n    // Post  the fetch to the server...\n    return (dispatch) => \n    fetch('http://localhost:3000/api/v1/matches', {\n        method: \"POST\",\n        headers: {\n            'Content-Type':'application/json'\n        }, \n        body: JSON.stringify(match)\n        })\n    .then(response => {\n        if (response.ok) {\n            return response.json()}\n        else {\n    \n            throw new Error(`${response.statusText} make sure to fill in all the blanks.`)\n        }\n        // // Needs experimental syntax plugin in order to throw expression.\n        // if (!response.ok) {\n        //     response.text().then(text => throw Error(text))\n        // }\n        // else {\n        //     return response.json();\n        // }\n    })\n    // ...reflect the added match to the window...\n    .then(match => { dispatch( addMatch(match) )})\n    // ...or show an error.\n    .catch(error => alert(error));\n}\n\n// match arg is equal to {...this.state} from MatchesForm at submission.\nexport const addMatch = (match) => {\n    console.log(\"actions/MatchActions.js addMatch\", match);\n    return { type: \"ADD_MATCH\", match };\n}\n\nexport const deleteMatch = (matchId) => {\n    console.log(\"actions/MatchActions.js deleteMatch\", matchId);\n    return dispatch =>\n    fetch(`http://localhost:3000/api/v1/matches/${matchId}`, {\n        method: \"DELETE\"\n    }).then(() => {\n        dispatch(removeMatch(matchId));\n    });\n}\n\nexport const removeMatch = (matchId) => {\n    console.log(\"actions/MatchActions.js removeMatch\", matchId);\n    return { type: \"REMOVE_MATCH\", matchId } \n}\n\nexport const bookmark = (match) => {\n    console.log(\"You're bookmarking this match.\", match);\n    // debugger\n    let newMatch = {...match}\n    if (match.bookmarked === null || match.bookmarked === false) {\n        newMatch.bookmarked = true;\n    } else {\n        newMatch.bookmarked = false;\n    }\n\n    return dispatch =>\n    fetch(`http://localhost:3000/api/v1/players/${match.player_id}/matches/${match.id}`, { \n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({match: newMatch}) \n    })\n    .then(() => {\n        dispatch(bookmarkMatch(newMatch));\n    });\n}\n\nexport const bookmarkMatch = (match) => {\n    return { type: \"BOOKMARK_MATCH\", match }\n}\n\nexport const fetchMatch = (matchId) => {\n    console.log(\"actions/MatchActions.js fetchMatch\", matchId);\n\n    fetch(`http://localhost:3000/api/v1/match/${matchId}`)\n    .then(response => response.json())\n    .then(match => console.log(match))\n    // .then(match => match)\n    .catch(error => console.log(error))\n}\n\nexport const patchMatch = (match) => {\n    console.log(\"You're patching this match.\", match);\n    return dispatch =>\n    fetch(`http://localhost:3000/api/v1/matches/${match.id}`, {\n    method: \"PATCH\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(match)})\n    // Without throwing any errors.\n    // .then(() => { dispatch(editMatch(match));\n    // })\n    .then(response => {\n        if (response.ok) {\n            return response.json()\n        }\n        else {\n    \n            throw new Error(`${response.statusText} make sure to fill in all the blanks.`)\n        }\n    })\n    .then(match => { dispatch(editMatch(match)) })\n    .catch(error => alert(error));\n}\n\nexport const editMatch = (match) => {\n    console.log(\"You're editing this match.\", match);\n    return { type: \"EDIT_MATCH\", match }\n}\n"]},"metadata":{},"sourceType":"module"}