{"ast":null,"code":"export default ((state = [], action) => {\n  console.log(\"reducers/quotes.js\");\n  let index;\n  let quote;\n\n  switch (action.type) {\n    case \"ADD_QUOTE\":\n      console.log(state, action); // THIS WAS WRONG: return {...state, quotes: [action.quote]} .\n      // It should not have \"quotes:\", It is here that it embedded the quotes from action.quotes.\n\n      return [...state, action.quote];\n\n    case \"REMOVE_QUOTE\":\n      console.log(\"remove_quote\", state, action);\n      return state.filter(quote => quote.id !== action.quoteId);\n\n    case \"UPVOTE_QUOTE\":\n      index = state.findIndex(quote => quote.id === action.quoteId);\n      quote = state[index];\n      return [...state.slice(0, index), Object.assign({}, quote, {\n        votes: quote.votes += 1\n      }), ...state.slice(index + 1)];\n\n    case \"DOWNVOTE_QUOTE\":\n      index = state.findIndex(quote => quote.id === action.quoteId);\n      quote = state[index];\n\n      if (quote.votes > 0) {\n        return [...state.slice(0, index), Object.assign({}, quote, {\n          votes: quote.votes -= 1\n        }), ...state.slice(index + 1)];\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/src/reducers/playersReducer.js"],"names":["state","action","console","log","index","quote","type","filter","id","quoteId","findIndex","slice","Object","assign","votes"],"mappings":"AAAA,gBAAe,CAACA,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,MAAIC,KAAJ;AACA,MAAIC,KAAJ;;AAEA,UAAQJ,MAAM,CAACK,IAAf;AACI,SAAK,WAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB,EADJ,CAEI;AACA;;AACA,aAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACI,KAAlB,CAAP;;AAEJ,SAAK,cAAL;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAA5B,EAAmCC,MAAnC;AACA,aAAOD,KAAK,CAACO,MAAN,CAAaF,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaP,MAAM,CAACQ,OAA1C,CAAP;;AAEJ,SAAK,cAAL;AACIL,MAAAA,KAAK,GAAGJ,KAAK,CAACU,SAAN,CAAgBL,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaP,MAAM,CAACQ,OAA7C,CAAR;AACAJ,MAAAA,KAAK,GAAGL,KAAK,CAACI,KAAD,CAAb;AAEA,aAAO,CACH,GAAGJ,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeP,KAAf,CADA,EAEHQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAAES,QAAAA,KAAK,EAAET,KAAK,CAACS,KAAN,IAAe;AAAxB,OAAzB,CAFG,EAGH,GAAGd,KAAK,CAACW,KAAN,CAAYP,KAAK,GAAG,CAApB,CAHA,CAAP;;AAMJ,SAAK,gBAAL;AACIA,MAAAA,KAAK,GAAGJ,KAAK,CAACU,SAAN,CAAgBL,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaP,MAAM,CAACQ,OAA7C,CAAR;AACAJ,MAAAA,KAAK,GAAGL,KAAK,CAACI,KAAD,CAAb;;AACA,UAAIC,KAAK,CAACS,KAAN,GAAc,CAAlB,EAAqB;AACjB,eAAO,CACH,GAAGd,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeP,KAAf,CADA,EAEHQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAAES,UAAAA,KAAK,EAAET,KAAK,CAACS,KAAN,IAAe;AAAxB,SAAzB,CAFG,EAGH,GAAGd,KAAK,CAACW,KAAN,CAAYP,KAAK,GAAG,CAApB,CAHA,CAAP;AAKH;;AACD,aAAOJ,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAlCR;AAoCH,CA1CD","sourcesContent":["export default (state = [], action) => {\n    console.log(\"reducers/quotes.js\")\n\n    let index;\n    let quote;\n\n    switch (action.type) {\n        case \"ADD_QUOTE\":\n            console.log(state, action)\n            // THIS WAS WRONG: return {...state, quotes: [action.quote]} .\n            // It should not have \"quotes:\", It is here that it embedded the quotes from action.quotes.\n            return [...state, action.quote]\n\n        case \"REMOVE_QUOTE\":\n            console.log(\"remove_quote\", state, action)\n            return state.filter(quote => quote.id !== action.quoteId)\n\n        case \"UPVOTE_QUOTE\":\n            index = state.findIndex(quote => quote.id === action.quoteId);\n            quote = state[index];\n\n            return [\n                ...state.slice(0, index),\n                Object.assign({}, quote, { votes: quote.votes += 1 }),\n                ...state.slice(index + 1)\n            ];\n\n        case \"DOWNVOTE_QUOTE\":\n            index = state.findIndex(quote => quote.id === action.quoteId);\n            quote = state[index];\n            if (quote.votes > 0) {\n                return [\n                    ...state.slice(0, index),\n                    Object.assign({}, quote, { votes: quote.votes -= 1 }),\n                    ...state.slice(index + 1)\n                ];\n            }\n            return state;\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}