{"ast":null,"code":"import _objectSpread from \"/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport uuid from 'uuid';\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_MATCHES\":\n      console.log(\"you're fetching all matches\", state, action);\n      return [...state];\n\n    case \"SHOW_MATCH\":\n      console.log(\"You're showing the match\", state, action);\n\n      const match = _objectSpread({\n        id: uuid()\n      }, action.match);\n\n      return [...state, match];\n\n    case \"ADD_MATCH\":\n      console.log(\"You're adding a match\", state, action);\n\n      const newMatch = _objectSpread({\n        id: uuid()\n      }, action.match);\n\n      return [...state, newMatch];\n\n    case \"REMOVE_MATCH\":\n      console.log(\"You're deleting a match\", state, action);\n      return state.filter(match => match.id !== action.matchId);\n\n    case \"BOOKMARK_MATCH\":\n      console.log(\"You're bookmarking a match\", state, action);\n      let bookmarkedMatch = state.find(match => match.id === action.match.id);\n      let index = state.indexOf(bookmarkedMatch);\n      debugger;\n      return [...state.slice(0, index), action.match, ...state.slice(index + 1, state.l)];\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/baronlip/Documents/FlatIronSchool/_bootcamp/Module_5_React-Redux/myttf_r-r_app/myttf-frontend/src/reducers/MatchesReducer.js"],"names":["uuid","state","action","type","console","log","match","id","newMatch","filter","matchId","bookmarkedMatch","find","index","indexOf","slice","l"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAEnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CJ,KAA3C,EAAkDC,MAAlD;AACA,aAAO,CAAC,GAAGD,KAAJ,CAAP;;AAEJ,SAAK,YAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,KAAxC,EAA+CC,MAA/C;;AACA,YAAMI,KAAK;AACPC,QAAAA,EAAE,EAAEP,IAAI;AADD,SAEJE,MAAM,CAACI,KAFH,CAAX;;AAIA,aAAO,CAAC,GAAGL,KAAJ,EAAWK,KAAX,CAAP;;AAEJ,SAAK,WAAL;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,KAArC,EAA4CC,MAA5C;;AACA,YAAMM,QAAQ;AACVD,QAAAA,EAAE,EAAEP,IAAI;AADE,SAEPE,MAAM,CAACI,KAFA,CAAd;;AAIA,aAAO,CAAC,GAAGL,KAAJ,EAAWO,QAAX,CAAP;;AAEJ,SAAK,cAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAvC,EAA8CC,MAA9C;AACA,aAAOD,KAAK,CAACQ,MAAN,CAAcH,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACQ,OAA5C,CAAP;;AAEJ,SAAK,gBAAL;AACIN,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CJ,KAA1C,EAAiDC,MAAjD;AACA,UAAIS,eAAe,GAAGV,KAAK,CAACW,IAAN,CAAWN,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACI,KAAP,CAAaC,EAA9C,CAAtB;AACA,UAAIM,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAcH,eAAd,CAAZ;AACA;AAEA,aAAO,CACH,GAAGV,KAAK,CAACc,KAAN,CAAY,CAAZ,EAAcF,KAAd,CADA,EACsBX,MAAM,CAACI,KAD7B,EACoC,GAAGL,KAAK,CAACc,KAAN,CAAYF,KAAK,GAAG,CAApB,EAAuBZ,KAAK,CAACe,CAA7B,CADvC,CAAP;;AAIJ;AACI,aAAOf,KAAP;AApCR;AAsCH,CAxCD","sourcesContent":["import uuid from 'uuid';\n\nexport default (state = [], action) => {\n\n    switch (action.type) {\n        case \"FETCH_MATCHES\":\n            console.log(\"you're fetching all matches\", state, action);\n            return [...state];\n        \n        case \"SHOW_MATCH\":\n            console.log(\"You're showing the match\", state, action);\n            const match = {\n                id: uuid(),\n                ...action.match\n            };\n            return [...state, match ];\n\n        case \"ADD_MATCH\":\n            console.log(\"You're adding a match\", state, action);\n            const newMatch = {\n                id: uuid(),\n                ...action.match\n            };\n            return [...state, newMatch ];\n\n        case \"REMOVE_MATCH\":\n            console.log(\"You're deleting a match\", state, action);\n            return state.filter((match) => match.id !== action.matchId)\n            \n        case \"BOOKMARK_MATCH\":\n            console.log(\"You're bookmarking a match\", state, action);\n            let bookmarkedMatch = state.find(match => match.id === action.match.id)\n            let index = state.indexOf(bookmarkedMatch)\n            debugger\n\n            return [ \n                ...state.slice(0,index), action.match, ...state.slice(index + 1, state.l)\n            ]\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}